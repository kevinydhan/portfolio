@import './media';

/// Applies `position: absolute | fixed` with the given positional properties:
/// top, right, bottom, left, and/or z-index.
///
/// @param {absolute | fixed} $position - Positional value, absolute | fixed
/// @param {number | null} [$t=null] - Top position, `top: $t;`
/// @param {number | null} [$r=null] - Right position, `right: $r;`
/// @param {number | null} [$b=null] - Bottom position, `bottom: $b;`
/// @param {number | null} [$l=null] - Left position, `left: $l;`
/// @param {number | null} [$z=null] - Z-index, `z-index: $z;`
@mixin position($position: 'absolute', $t: null, $r: null, $b: null, $l: null, $z: null) {
    position: $position;
    @if $t {
        top: $t;
    }
    @if $r {
        right: $r;
    }
    @if $b {
        bottom: $b;
    }
    @if $l {
        left: $l;
    }
    @if $z {
        z-index: $z;
    }
}

/// Applies Flexbox on the element.
///
/// @param {string} $jc - Value for `justify-content` property
/// @param {string} $ai - Value for `align-items` property
/// @param {string} $fd - Value for `flex-direction` property
/// @param {string} $fw - Value for `flex-wrap` property
@mixin flex($jc: null, $ai: null, $fd: null, $fw: null) {
    display: flex;
    @if $jc {
        justify-content: $jc;
    }
    @if $ai {
        align-items: $ai;
    }
    @if $fd {
        flex-direction: $fd;
    }
    @if $fw {
        flex-wrap: $fw;
    }
}

/// Applies a set of widths at different breakpoints. This mixin is to be used
/// on elements whose width are directly affected by changes in the viewport
/// width.
@mixin top-level-element() {
    margin: 0 auto;

    @include media($max-width: 'md') {
        width: 87.5%;
    }

    @include media($min-width: 'md') {
        width: 90%;
        max-width: 75rem;
    }
}
